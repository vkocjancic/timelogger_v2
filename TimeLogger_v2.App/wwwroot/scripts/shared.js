import{dateFormatter}from"./common.js";let templateDateNavigator='<nav class="date__nav">    <input type="date" name="tbDate" class="date__nav--picker" v-model="selectedDate" v-on:change="$emit(\'date-change\', selectedDate)" /></nav>';export const DateNavigatorComponent={data:()=>({selectedDate:dateFormatter.toIsoDate(new Date)}),props:["type"],template:templateDateNavigator};let templateDropDownSelector='<section class="dd dd-pos-right">    <label for="view-selector" class="dd--label">{{label}}:</label>    <select name="view-selector" class="ctrl ctrl-inline dd--select" v-model="selectedValue">\t     <option v-for="option in options" class="dd--option" :value="option.value" :selected="option.value == selectedValue">{{option.text}}</option>    </select></section>';export const DropDownSelectorComponent={data:()=>({selectedValue:""}),props:{label:String,options:Array},created(){let e=this;e.options&&(e.selectedValue=e.options[0].value)},template:templateDropDownSelector};let templateRangeNavigator='<nav class="range__nav">  <div class="range__nav--item">\t <label for="tbDateFrom">From</label>\t <input type="date" name="tbDateFrom" class="date__nav--picker" v-model="selectedDateFrom" v-on:change="$emit(\'range-change\', selectedDateFrom, selectedDateTo)" />  </div>  <div class="range__nav--item">\t <label for="tbDateFrom">To</label>\t <input type="date" name="tbDateTo" class="date__nav--picker" v-model="selectedDateTo" v-on:change="$emit(\'range-change\', selectedDateFrom, selectedDateTo)" />  </div></nav>';export const RangeNavigatorComponent={data:()=>({selectedDateFrom:dateFormatter.toIsoDate((new Date).addDays(-7)),selectedDateTo:dateFormatter.toIsoDate(new Date)}),props:["type"],template:templateRangeNavigator};