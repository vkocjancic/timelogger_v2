import{sessionStore}from"./clientstore.js";import{dateFormatter}from"./common.js";import{AlertComponent}from"./shared.js";let templateLogin='<section class="account__section">   <div class="account__container">       <form name="login" class="account__form" novalidate="novalidate" v-on:submit.prevent="signIn">           <img src="../images/login_logo.png" alt="TimeLogger logo" class="account__form__logo" />           <fieldset>               <alert :message="alertMessage" />               <p>Enter your <strong>email address</strong> and <strong>password</strong></p>               <div><input id="inUsername" name="inUsername" type="email" class="ctrl" placeholder="you@example.com" autofocus="autofocus" v-model="input.username" /></div>               <div><input id="inPassword" name="inPassword" type="password" class="ctrl" placeholder="password" v-model="input.password" /></div>               <div><button class="btn btn--block btn--primary" type="submit" :disabled="disableLogin">{{ input.buttonSignIn }}</button></div>               <ul>                   <li><router-link to="/forgot" class="btn btn--block">Forgot password?</router-link></li>                   <li><router-link to="/create" class="btn btn--block btn--secondary">Create account</router-link></li>               </ul>           </fieldset>       </form>   </div></section>';export const LoginComponent={data:()=>({alertMessage:"",disableLogin:!1,input:{buttonSignIn:"Sign in",username:"",password:""}}),methods:{signIn:function(e){var t=this,s=this.$router,o=this.$route;axios.post("/api/account/login",{username:t.input.username,password:t.input.password}).then(function(e){var a=e.data;a&&(sessionStore.setter.isLoggedIn(!0),sessionStore.setter.accountDetails({username:a.username,initials:a.initials,type:a.accountType,expires:a.expiresIsoDate?dateFormatter.fromIsoDate(a.expiresIsoDate):null}),t.alertMessage=null,s.push(o.query.redirect||"/"))}).catch(function(e){if(401===e.response.status){t.alertMessage="Sorry, you have entered invalid e-mail or password",t.disableLogin=!0;var s=e.response.data.nextLoginTimeout;t.input.buttonSignIn="Next attempt in... "+s--;var o=setInterval(function(){0===s?(t.input.buttonSignIn="Sign in",t.disableLogin=!1,clearInterval(o)):t.input.buttonSignIn="Next attempt in... "+s--},1e3)}else t.alertMessage="Oops. Something went wrong. Please, try again later"})}},components:{alert:AlertComponent},template:templateLogin};export const LogoutComponent={created(){this.doLogout()},methods:{doLogout:function(){sessionStore.getter.isLoggedIn()&&(axios.post("/api/account/logout"),sessionStore.setter.accountDetails(null),sessionStore.setter.isLoggedIn(!1)),this.$router.push("/")}},template:""};let templateCreateAccount='<section class="account__section">   <div class="account__container">       <form name="create" class="account__form" novalidate="novalidate" v-on:submit.prevent="signUp">           <img src="../images/login_logo.png" alt="TimeLogger logo" class="account__form__logo" />           <fieldset>               <alert :message="alertMessage" />               <p>Enter your <strong>email address</strong> and <strong>password</strong></p>               <div><input id="inUsername" name="inUsername" type="email" class="ctrl" placeholder="you@example.com" autofocus="autofocus" v-model="input.username" /></div>               <div>                   <input id="inPassword" name="inPassword" type="password" class="ctrl" placeholder="password" v-model="input.password" />                   <span class="account__footnote">password policy: <strong>minimum 16 characters</strong></span>               </div>               <div><input id="inPasswordCheck" name="inPasswordCheck" type="password" class="ctrl" placeholder="password validation" v-model="input.passwordCheck" /></div>               <div>                   <button class="btn btn--block btn--primary" type="submit" :disabled="disableRegistration">{{ input.buttonRegister }}</button>                   <span class="account__footnote">By creating an account, you are agreeing to our <router-link to="/terms-of-service">Terms of Service</router-link> and <router-link to="/privacy">Privacy Policy</router-link></span>               </div>               <ul>                   <li><router-link to="/login" class="btn btn--block btn--secondary">Sign in</router-link></li>               </ul>           </fieldset>       </form>   </div></section>';function doValidation(e){var t=!0,s="";return e.input.username&&""===e.input.username?(t=!1,s="Your e-mail address is missing"):""===e.input.password&&""===e.input.passwordCheck?(t=!1,s="You have not set your password"):e.input.password.length<16?(t=!1,s="Your password is too short"):e.input.password!=e.input.passwordCheck&&(t=!1,s="Passwords do not match"),e.alertMessage=t?null:s,t}export const CreateAccountComponent={data:()=>({alertMessage:"",disableRegistration:!1,input:{buttonRegister:"Yes, sign me up!",username:"",password:"",passwordCheck:""}}),methods:{signUp:function(e){var t=this,s=this.$router,o=this.$route;doValidation(t)&&axios.post("/api/account/create",{username:t.input.username,password:t.input.password,passwordCheck:t.input.passwordCheck}).then(function(e){t.alertMessage=null,s.push(o.query.redirect||"/")}).catch(function(e){400===e.response.status?t.alertMessage=e.response.data.errorMessage?e.response.data.errorMessage:e.response.data:t.alertMessage="Oops. Something went wrong. Please, try again later"})}},components:{alert:AlertComponent},template:templateCreateAccount};let templateForgotPassword='<section class="account__section">   <div class="account__container">       <form name="create" class="account__form" novalidate="novalidate" v-on:submit.prevent="sendPasswordRecoveryEmail">           <img src="../images/login_logo.png" alt="TimeLogger logo" class="account__form__logo" />           <fieldset>               <alert :message="alertMessage" :type="getAlertType" />               <p>Enter your <strong>email address</strong></p>               <div><input id="inUsername" name="inUsername" type="email" class="ctrl" placeholder="you@example.com" autofocus="autofocus" v-model="input.username" /></div>               <div>                   <button class="btn btn--block btn--primary" type="submit">{{ input.buttonRecovery }}</button>               </div>               <ul>                   <li><router-link to="/login" class="btn btn--block btn--secondary">Sign in</router-link></li>               </ul>           </fieldset>       </form>   </div></section>';export const ForgotPasswordComponent={data:()=>({alertMessage:"",hasError:!1,input:{buttonRecovery:"Send recovery e-mail",username:""},showAlert:!1}),computed:{getAlertType:function(){return this.hasError?"danger":"success"}},methods:{sendPasswordRecoveryEmail:function(e){var t=this;t.input.username&&0!=t.input.username.length||(t.alertMessage=message,t.showAlert=!0),axios.post("/api/account/forgot",{username:t.input.username}).then(function(e){t.alertMessage="Password recovery email has been sent to specified address",t.hasError=!1,t.showAlert=!0}).catch(function(e){t.alertMessage="Oops. Something went wrong. Please, try again later",t.hasError=!0,t.showAlert=!0})}},template:templateForgotPassword};let templatePasswordReset='<section class="account__section">   <div class="account__container">       <form name="create" class="account__form" novalidate="novalidate" v-on:submit.prevent="resetPassword">           <img src="../images/login_logo.png" alt="TimeLogger logo" class="account__form__logo" />           <fieldset>               <alert :message="alertMessage" />               <p>Enter your new <strong>password</strong> twice</p>               <div>                   <input id="inPassword" name="inPassword" type="password" class="ctrl" placeholder="password" v-model="input.password" />                   <span class="account__footnote">password policy: <strong>minimum 16 characters</strong></span>               </div>               <div><input id="inPasswordCheck" name="inPasswordCheck" type="password" class="ctrl" placeholder="password validation" v-model="input.passwordCheck" /></div>               <div>                   <button class="btn btn--block btn--primary" type="submit">{{ input.buttonReset }}</button>               </div>           </fieldset>       </form>   </div></section>';export const PasswordResetComponent={data:()=>({alertMessage:"",hasError:!1,input:{buttonReset:"Reset password",password:"",passwordCheck:""}}),methods:{resetPassword:function(e){var t=this,s=this.$router,o=this.$route;doValidation(t)&&(o.params.id&&0!=o.params.id.length||s.push("/"),axios.post("/api/account/passwordreset",{password:t.input.password,passwordCheck:t.input.passwordCheck,passwordResetId:o.params.id}).then(function(e){t.alertMessage="",s.push("/")}).catch(function(e){400===e.response.status?t.alertMessage=e.response.data.errorMessage?e.response.data.errorMessage:e.response.data:t.alertMessage="Oops. Something went wrong. Please, try again later"}))}},components:{alert:AlertComponent},template:templatePasswordReset};